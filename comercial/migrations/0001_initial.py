# Generated by Django 5.0.7 on 2024-08-03 16:19

import comercial.models
import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aerolinea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True, verbose_name='Codigo Aerolinea')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Nombre Aerolinea')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='AgenciaCarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Agencia Carga')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True, verbose_name='Nombre Cliente')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax ID')),
                ('incoterm', models.CharField(blank=True, max_length=50, null=True, verbose_name='Incoterm')),
                ('agencia_de_carga', models.CharField(blank=True, max_length=100, null=True, verbose_name='Agencia De Carga')),
                ('correo', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo')),
                ('correo2', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo 2')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
                ('intermediario', models.CharField(blank=True, max_length=100, null=True, verbose_name='Intermediario')),
                ('direccion2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Direccion 2')),
                ('ciudad2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad 2')),
                ('tax_id2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax ID2')),
                ('encargado_de_reservar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reservar')),
                ('negociaciones_cartera', models.IntegerField(verbose_name='Dias Cartera')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Contenedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True, verbose_name='Nombre del Contenedor')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Exportador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Fruta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Iata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('ciudad', models.CharField(max_length=25)),
                ('pais', models.CharField(max_length=25)),
            ],
            options={
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Intermediario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Intermediario')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='SubExportadora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Subexportadora')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoCaja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Tipo De Caja')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ClientePresentacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.cliente')),
                ('fruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.fruta')),
            ],
            options={
                'ordering': ['cliente'],
            },
        ),
        migrations.AddField(
            model_name='cliente',
            name='destino_iata',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.iata', verbose_name='Iata'),
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semana', models.CharField(blank=True, editable=False, null=True, verbose_name='Semana')),
                ('fecha_solicitud', models.DateField(auto_now_add=True, verbose_name='Fecha Solicitud')),
                ('fecha_entrega', models.DateField(verbose_name='Fecha Entrega')),
                ('fecha_llegada', models.DateField(blank=True, null=True, verbose_name='Fecha Llegada Estimada')),
                ('dias_cartera', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Dias Cartera')),
                ('awb', models.CharField(blank=True, default=None, max_length=12, null=True, validators=[comercial.models.validate_awb], verbose_name='AWB')),
                ('numero_factura', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Factura')),
                ('total_cajas_solicitadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Cajas Solicitadas')),
                ('total_cajas_enviadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Cajas Enviadas')),
                ('total_peso_bruto_solicitado', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total Bruto Solicitado')),
                ('total_peso_bruto_enviado', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total Bruto Enviado')),
                ('total_piezas_solicitadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Total Piezas Solicitadas')),
                ('total_piezas_enviadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Total Piezas Enviadas')),
                ('nota_credito_no', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Nota Crédito')),
                ('motivo_nota_credito', models.CharField(blank=True, choices=[('Calidad', 'Calidad'), ('Faltantes', 'Faltantes'), ('Error En Documentos', 'Error En Documentos'), ('Precio', 'Precio')], default=None, max_length=20, null=True, verbose_name='Motivo Nota Crédito')),
                ('descuento', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Descuento C')),
                ('valor_total_nota_credito_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Total Nota Crédito')),
                ('tasa_representativa_usd_diaria', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$TRM Oficial')),
                ('trm_cotizacion', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$TRM Cotización')),
                ('valor_pagado_cliente_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Pagado Cliente')),
                ('utilidad_bancaria_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Utilidad Bancaria USD')),
                ('fecha_pago', models.DateField(blank=True, null=True, verbose_name='Fecha Pago Cliente')),
                ('fecha_monetizacion', models.DateField(blank=True, null=True, verbose_name='Fecha Monetización')),
                ('trm_monetizacion', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$TRM Monetización')),
                ('estado_factura', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Estado Factura')),
                ('diferencia_por_abono', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='Diferencia o Abono')),
                ('dias_de_vencimiento', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Dias Vencimiento')),
                ('valor_total_factura_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Total Factura')),
                ('valor_total_utilidad_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Utilidades USD')),
                ('valor_utilidad_pesos', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=15, null=True, verbose_name='$Utilidades Pesos')),
                ('documento_cobro_utilidad', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Doc Cobro Utilidad')),
                ('fecha_pago_utilidad', models.DateField(blank=True, null=True, verbose_name='Fecha Pago Utilidad')),
                ('estado_utilidad', models.CharField(editable=False, max_length=50, verbose_name='Estado Utilidad')),
                ('estado_pedido', models.CharField(blank=True, default='En Proceso', editable=False, max_length=20, null=True, verbose_name='Estado Pedido')),
                ('estado_cancelacion', models.CharField(choices=[('sin_solicitud', 'Sin solicitud'), ('pendiente', 'Pendiente'), ('autorizado', 'Autorizado'), ('no_autorizado', 'No Autorizado')], default='sin_solicitud', editable=False, max_length=20, verbose_name='Estado Cancelación')),
                ('observaciones', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(300)], verbose_name='Observaciones')),
                ('variedades', models.TextField(blank=True, editable=False, null=True, validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='Variedades')),
                ('estatus_reserva', models.CharField(blank=True, choices=[('Confirmada', 'Confirmada'), ('Confirmada - Sin AWB', 'Confirmada - Sin AWB'), ('Mover Reserva', 'Mover Reserva'), ('Pendiente Confirmación', 'Pendiente Confirmación'), ('Solicitada', 'Solicitada')], max_length=50, null=True, verbose_name='Estado Reserva')),
                ('etd', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Time of Departure')),
                ('eta', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Time of Arrival')),
                ('peso_awb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Peso Awb')),
                ('estado_documentos', models.CharField(blank=True, choices=[('Enviado Al Cliente', 'Enviado Al Cliente'), ('Con Problemas En Destino', 'Con Problemas En Destino'), ('Pendiente CO', 'Pendiente CO'), ('Pendiente Correcion De Documentos', 'Pendiente Correcion De Documentos'), ('Pendiente Envio De Documentos Al Cliente', 'Pendiente Envio De Documentos Al Cliente'), ('Pendiente Fito', 'Pendiente Fito'), ('Recibido De Documentos Por Parte Del Exportador', 'Recibido De Documentos Por Parte Del Exportador')], max_length=60, null=True, verbose_name='Estado Documentos')),
                ('observaciones_tracking', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(300)], verbose_name='Observaciones Tracking')),
                ('eta_real', models.DateTimeField(blank=True, null=True, verbose_name='Real ETA')),
                ('diferencia_peso_factura_awb', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='Kg Invoice / AWB')),
                ('termo', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Termo')),
                ('aerolinea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.aerolinea', verbose_name='Aerolinea')),
                ('agencia_carga', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.agenciacarga', verbose_name='Agencia Carga')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.cliente', verbose_name='Cliente')),
                ('destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.iata', verbose_name='Destino')),
                ('exportadora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.exportador', verbose_name='Exportador')),
                ('intermediario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.intermediario', verbose_name='Intermediario')),
                ('responsable_reserva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_responsable_reserva', to='comercial.exportador', verbose_name='Responsable Reserva')),
                ('subexportadora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.subexportadora', verbose_name='Subexportadora')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AutorizacionCancelacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autorizado', models.BooleanField(default=False)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('fecha_autorizacion', models.DateTimeField(blank=True, null=True)),
                ('usuario_autorizador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='autorizador', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Autorizador')),
                ('usuario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitante', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Solicitante')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.pedido', verbose_name='Pedido')),
            ],
            options={
                'ordering': ['pedido'],
            },
        ),
        migrations.CreateModel(
            name='Presentacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Presentación')),
                ('kilos', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Kilos')),
            ],
            options={
                'ordering': ['nombre'],
                'unique_together': {('nombre', 'kilos')},
            },
        ),
        migrations.AddField(
            model_name='fruta',
            name='presentaciones',
            field=models.ManyToManyField(related_name='frutas', through='comercial.ClientePresentacion', to='comercial.presentacion'),
        ),
        migrations.AddField(
            model_name='clientepresentacion',
            name='presentacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.presentacion'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='presentaciones',
            field=models.ManyToManyField(related_name='clientes', through='comercial.ClientePresentacion', to='comercial.presentacion'),
        ),
        migrations.CreateModel(
            name='Referencias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Referencia')),
                ('referencia_nueva', models.CharField(blank=True, max_length=255, null=True, verbose_name='Referencia Nueva')),
                ('cant_contenedor', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad Cajas En Contenedor')),
                ('precio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precio')),
                ('cantidad_pallet_con_contenedor', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Pallet Contenedor')),
                ('cantidad_pallet_sin_contenedor', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Pallet Sin Contenedor')),
                ('porcentaje_peso_bruto', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de Peso Bruto')),
                ('contenedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comercial.contenedor', verbose_name='Contenedor')),
                ('exportador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.exportador', verbose_name='Exportador')),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPedido',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('semana', models.CharField(blank=True, editable=False, null=True, verbose_name='Semana')),
                ('fecha_solicitud', models.DateField(blank=True, editable=False, verbose_name='Fecha Solicitud')),
                ('fecha_entrega', models.DateField(verbose_name='Fecha Entrega')),
                ('fecha_llegada', models.DateField(blank=True, null=True, verbose_name='Fecha Llegada Estimada')),
                ('dias_cartera', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Dias Cartera')),
                ('awb', models.CharField(blank=True, default=None, max_length=12, null=True, validators=[comercial.models.validate_awb], verbose_name='AWB')),
                ('numero_factura', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Factura')),
                ('total_cajas_solicitadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Cajas Solicitadas')),
                ('total_cajas_enviadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Cajas Enviadas')),
                ('total_peso_bruto_solicitado', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total Bruto Solicitado')),
                ('total_peso_bruto_enviado', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='Total Bruto Enviado')),
                ('total_piezas_solicitadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Total Piezas Solicitadas')),
                ('total_piezas_enviadas', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Total Piezas Enviadas')),
                ('nota_credito_no', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Nota Crédito')),
                ('motivo_nota_credito', models.CharField(blank=True, choices=[('Calidad', 'Calidad'), ('Faltantes', 'Faltantes'), ('Error En Documentos', 'Error En Documentos'), ('Precio', 'Precio')], default=None, max_length=20, null=True, verbose_name='Motivo Nota Crédito')),
                ('descuento', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Descuento C')),
                ('valor_total_nota_credito_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Total Nota Crédito')),
                ('tasa_representativa_usd_diaria', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$TRM Oficial')),
                ('trm_cotizacion', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$TRM Cotización')),
                ('valor_pagado_cliente_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Pagado Cliente')),
                ('utilidad_bancaria_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Utilidad Bancaria USD')),
                ('fecha_pago', models.DateField(blank=True, null=True, verbose_name='Fecha Pago Cliente')),
                ('fecha_monetizacion', models.DateField(blank=True, null=True, verbose_name='Fecha Monetización')),
                ('trm_monetizacion', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$TRM Monetización')),
                ('estado_factura', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Estado Factura')),
                ('diferencia_por_abono', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='Diferencia o Abono')),
                ('dias_de_vencimiento', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Dias Vencimiento')),
                ('valor_total_factura_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Total Factura')),
                ('valor_total_utilidad_usd', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True, verbose_name='$Utilidades USD')),
                ('valor_utilidad_pesos', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=15, null=True, verbose_name='$Utilidades Pesos')),
                ('documento_cobro_utilidad', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Doc Cobro Utilidad')),
                ('fecha_pago_utilidad', models.DateField(blank=True, null=True, verbose_name='Fecha Pago Utilidad')),
                ('estado_utilidad', models.CharField(editable=False, max_length=50, verbose_name='Estado Utilidad')),
                ('estado_pedido', models.CharField(blank=True, default='En Proceso', editable=False, max_length=20, null=True, verbose_name='Estado Pedido')),
                ('estado_cancelacion', models.CharField(choices=[('sin_solicitud', 'Sin solicitud'), ('pendiente', 'Pendiente'), ('autorizado', 'Autorizado'), ('no_autorizado', 'No Autorizado')], default='sin_solicitud', editable=False, max_length=20, verbose_name='Estado Cancelación')),
                ('observaciones', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(300)], verbose_name='Observaciones')),
                ('variedades', models.TextField(blank=True, editable=False, null=True, validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='Variedades')),
                ('estatus_reserva', models.CharField(blank=True, choices=[('Confirmada', 'Confirmada'), ('Confirmada - Sin AWB', 'Confirmada - Sin AWB'), ('Mover Reserva', 'Mover Reserva'), ('Pendiente Confirmación', 'Pendiente Confirmación'), ('Solicitada', 'Solicitada')], max_length=50, null=True, verbose_name='Estado Reserva')),
                ('etd', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Time of Departure')),
                ('eta', models.DateTimeField(blank=True, null=True, verbose_name='Estimated Time of Arrival')),
                ('peso_awb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Peso Awb')),
                ('estado_documentos', models.CharField(blank=True, choices=[('Enviado Al Cliente', 'Enviado Al Cliente'), ('Con Problemas En Destino', 'Con Problemas En Destino'), ('Pendiente CO', 'Pendiente CO'), ('Pendiente Correcion De Documentos', 'Pendiente Correcion De Documentos'), ('Pendiente Envio De Documentos Al Cliente', 'Pendiente Envio De Documentos Al Cliente'), ('Pendiente Fito', 'Pendiente Fito'), ('Recibido De Documentos Por Parte Del Exportador', 'Recibido De Documentos Por Parte Del Exportador')], max_length=60, null=True, verbose_name='Estado Documentos')),
                ('observaciones_tracking', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(300)], verbose_name='Observaciones Tracking')),
                ('eta_real', models.DateTimeField(blank=True, null=True, verbose_name='Real ETA')),
                ('diferencia_peso_factura_awb', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='Kg Invoice / AWB')),
                ('termo', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Termo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('aerolinea', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.aerolinea', verbose_name='Aerolinea')),
                ('agencia_carga', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.agenciacarga', verbose_name='Agencia Carga')),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.cliente', verbose_name='Cliente')),
                ('exportadora', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.exportador', verbose_name='Exportador')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsable_reserva', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.exportador', verbose_name='Responsable Reserva')),
                ('destino', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.iata', verbose_name='Destino')),
                ('intermediario', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.intermediario', verbose_name='Intermediario')),
                ('subexportadora', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.subexportadora', verbose_name='Subexportadora')),
            ],
            options={
                'verbose_name': 'historical pedido',
                'verbose_name_plural': 'historical pedidos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='PresentacionReferencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.fruta')),
                ('presentacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.presentacion')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.referencias')),
                ('tipo_caja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.tipocaja')),
            ],
            options={
                'ordering': ['fruta'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDetallePedido',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cajas_solicitadas', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Solicitadas')),
                ('presentacion_peso', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5, null=True, verbose_name='Peso Caja')),
                ('kilos', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Kilos Netos')),
                ('cajas_enviadas', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Enviadas')),
                ('kilos_enviados', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Kilos Enviados')),
                ('diferencia', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Diferencia')),
                ('stickers', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='Stickers')),
                ('lleva_contenedor', models.BooleanField(choices=[(True, 'Sí'), (False, 'No')], verbose_name='LLeva Contenedor')),
                ('referencia_contenedor', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='Contenedor')),
                ('cantidad_contenedores', models.IntegerField(blank=True, editable=False, null=True, verbose_name='No. Contenedores')),
                ('tarifa_utilidad', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Utilidad Por Caja')),
                ('valor_x_caja_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Por Caja USD')),
                ('valor_x_producto', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Por Producto')),
                ('no_cajas_nc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='No Cajas NC')),
                ('valor_nota_credito_usd', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Nota Crédito USD')),
                ('afecta_utilidad', models.BooleanField(blank=True, choices=[(True, 'Sí'), (False, 'No'), (None, 'Descuento')], default=False, null=True, verbose_name='Afecta Utilidad')),
                ('valor_total_utilidad_x_producto', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Utilidad X Producto')),
                ('precio_proforma', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='$Proforma')),
                ('observaciones', models.CharField(blank=True, max_length=100, null=True, verbose_name='Observaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('fruta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.fruta', verbose_name='Fruta')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.pedido', verbose_name='Pedido')),
                ('presentacion', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.presentacion', verbose_name='Presentación')),
                ('referencia', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.referencias', verbose_name='Referencia')),
                ('tipo_caja', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='comercial.tipocaja', verbose_name='Marca Caja')),
            ],
            options={
                'verbose_name': 'historical detalle pedido',
                'verbose_name_plural': 'historical detalle pedidos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cajas_solicitadas', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Solicitadas')),
                ('presentacion_peso', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5, null=True, verbose_name='Peso Caja')),
                ('kilos', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Kilos Netos')),
                ('cajas_enviadas', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cajas Enviadas')),
                ('kilos_enviados', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Kilos Enviados')),
                ('diferencia', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Diferencia')),
                ('stickers', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='Stickers')),
                ('lleva_contenedor', models.BooleanField(choices=[(True, 'Sí'), (False, 'No')], verbose_name='LLeva Contenedor')),
                ('referencia_contenedor', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='Contenedor')),
                ('cantidad_contenedores', models.IntegerField(blank=True, editable=False, null=True, verbose_name='No. Contenedores')),
                ('tarifa_utilidad', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Utilidad Por Caja')),
                ('valor_x_caja_usd', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='$Por Caja USD')),
                ('valor_x_producto', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Por Producto')),
                ('no_cajas_nc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='No Cajas NC')),
                ('valor_nota_credito_usd', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Nota Crédito USD')),
                ('afecta_utilidad', models.BooleanField(blank=True, choices=[(True, 'Sí'), (False, 'No'), (None, 'Descuento')], default=False, null=True, verbose_name='Afecta Utilidad')),
                ('valor_total_utilidad_x_producto', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True, verbose_name='$Utilidad X Producto')),
                ('precio_proforma', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='$Proforma')),
                ('observaciones', models.CharField(blank=True, max_length=100, null=True, verbose_name='Observaciones')),
                ('fruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.fruta', verbose_name='Fruta')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.pedido', verbose_name='Pedido')),
                ('presentacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.presentacion', verbose_name='Presentación')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.referencias', verbose_name='Referencia')),
                ('tipo_caja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comercial.tipocaja', verbose_name='Marca Caja')),
            ],
            options={
                'ordering': ['pedido', 'fruta'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='clientepresentacion',
            unique_together={('cliente', 'presentacion', 'fruta')},
        ),
    ]
